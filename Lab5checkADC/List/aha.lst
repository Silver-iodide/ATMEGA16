
AVRASM ver. 2.1.30  C:\cvavr2\bin\Lab5checkADC\List\aha.asm Sat Aug 24 17:51:41 2024

C:\cvavr2\bin\Lab5checkADC\List\aha.asm(1059): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega16
                 ;Program type             : Application
                 ;Clock frequency          : 16.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 256 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1119
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _adc_value=R4
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0059 	JMP  _adc_isr
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6461
000034 5f63
000035 6176
000036 756c      	.DB  0x61,0x64,0x63,0x5F,0x76,0x61,0x6C,0x75
000037 3a65
000038 2520
000039 0a64
C:\cvavr2\bin\Lab5checkADC\List\aha.asm(1098): warning: .cseg .db misalignment - padding zero byte
00003a 0000      	.DB  0x65,0x3A,0x20,0x25,0x64,0xA,0x0
                 __RESET:
00003b 94f8      	CLI
00003c 27ee      	CLR  R30
00003d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00003e e0f1      	LDI  R31,1
00003f bffb      	OUT  GICR,R31
000040 bfeb      	OUT  GICR,R30
000041 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000042 e1f8      	LDI  R31,0x18
000043 bdf1      	OUT  WDTCR,R31
000044 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000045 e08d      	LDI  R24,(14-2)+1
000046 e0a2      	LDI  R26,2
000047 27bb      	CLR  R27
                 __CLEAR_REG:
000048 93ed      	ST   X+,R30
000049 958a      	DEC  R24
00004a f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004b e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004c e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004d e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004e 93ed      	ST   X+,R30
00004f 9701      	SBIW R24,1
000050 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000051 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000052 bfed      	OUT  SPL,R30
000053 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000054 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000055 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000056 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000057 940c 0062 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Chip type               : ATmega16
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 16.000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 256
                 ;*****************************************************/
                 ;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;
                 ;#include <delay.h>
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;
                 ;#define ADC_VREF_TYPE 0x40
                 ;volatile char newdata = 0;
                 ;volatile char transmit_times = 0;
                 ;unsigned int adc_value;
                 ;
                 ;// ADC interrupt service routine
                 ;interrupt [ADC_INT] void adc_isr(void)
                 ; 0000 0018 {
                 
                 	.CSEG
                 _adc_isr:
000059 93ea      	ST   -Y,R30
                 ; 0000 0019 ADCSRA |= (1 << ADIF);
00005a 9a34      	SBI  0x6,4
                 ; 0000 001A 
                 ; 0000 001B // Read the AD conversion result
                 ; 0000 001C adc_value = ADCW;
                +
00005b b044     +IN R4 , 4
00005c b055     +IN R5 , 4 + 1
                 	__INWR 4,5,4
                 ; 0000 001D 
                 ; 0000 001E newdata = 1;
00005d e0e1      	LDI  R30,LOW(1)
00005e 93e0 0160 	STS  _newdata,R30
                 ; 0000 001F // putchar('A');
                 ; 0000 0020 }
000060 91e9      	LD   R30,Y+
000061 9518      	RETI
                 ;
                 ;// Declare your global variables here
                 ;
                 ;void main(void)
                 ; 0000 0025 {
                 _main:
                 ; 0000 0026 // Declare your local variables here
                 ; 0000 0027 
                 ; 0000 0028 // Timer/Counter 1 initialization
                 ; 0000 0029 // Clock source: System Clock
                 ; 0000 002A // Clock value: 16000.000 kHz
                 ; 0000 002B // Mode: Normal top=0xFFFF
                 ; 0000 002C TCCR1A=0x00;
000062 e0e0      	LDI  R30,LOW(0)
000063 bdef      	OUT  0x2F,R30
                 ; 0000 002D TCCR1B=0x01;
000064 e0e1      	LDI  R30,LOW(1)
000065 bdee      	OUT  0x2E,R30
                 ; 0000 002E TCNT1H=0x00;
000066 e0e0      	LDI  R30,LOW(0)
000067 bded      	OUT  0x2D,R30
                 ; 0000 002F TCNT1L=0x00;
000068 bdec      	OUT  0x2C,R30
                 ; 0000 0030 ICR1H=0x00;
000069 bde7      	OUT  0x27,R30
                 ; 0000 0031 ICR1L=0x00;
00006a bde6      	OUT  0x26,R30
                 ; 0000 0032 OCR1AH=0x00;
00006b bdeb      	OUT  0x2B,R30
                 ; 0000 0033 OCR1AL=0x00;
00006c bdea      	OUT  0x2A,R30
                 ; 0000 0034 OCR1BH=0x00;
00006d bde9      	OUT  0x29,R30
                 ; 0000 0035 OCR1BL=0x00;
00006e bde8      	OUT  0x28,R30
                 ; 0000 0036 
                 ; 0000 0037 
                 ; 0000 0038 // External Interrupt(s) initialization
                 ; 0000 0039 MCUCR=0x00;
00006f bfe5      	OUT  0x35,R30
                 ; 0000 003A MCUCSR=0x00;
000070 bfe4      	OUT  0x34,R30
                 ; 0000 003B 
                 ; 0000 003C // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 003D TIMSK=0x00;
000071 bfe9      	OUT  0x39,R30
                 ; 0000 003E 
                 ; 0000 003F // USART initialization
                 ; 0000 0040 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0041 // USART Receiver: On
                 ; 0000 0042 // USART Transmitter: On
                 ; 0000 0043 // USART Mode: Asynchronous
                 ; 0000 0044 // USART Baud Rate: 9600
                 ; 0000 0045 UCSRA=0x00;
000072 b9eb      	OUT  0xB,R30
                 ; 0000 0046 UCSRB=0x18;
000073 e1e8      	LDI  R30,LOW(24)
000074 b9ea      	OUT  0xA,R30
                 ; 0000 0047 UCSRC=0x86;
000075 e8e6      	LDI  R30,LOW(134)
000076 bde0      	OUT  0x20,R30
                 ; 0000 0048 UBRRH=0x00;
000077 e0e0      	LDI  R30,LOW(0)
000078 bde0      	OUT  0x20,R30
                 ; 0000 0049 UBRRL=0x67;
000079 e6e7      	LDI  R30,LOW(103)
00007a b9e9      	OUT  0x9,R30
                 ; 0000 004A UCSRB |= (1 << RXCIE);
00007b 9a57      	SBI  0xA,7
                 ; 0000 004B UCSRB |= (1 << TXCIE);
00007c 9a56      	SBI  0xA,6
                 ; 0000 004C 
                 ; 0000 004D // Analog Comparator initialization
                 ; 0000 004E // Analog Comparator: Off
                 ; 0000 004F // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 0050 ACSR=0x80;
00007d e8e0      	LDI  R30,LOW(128)
00007e b9e8      	OUT  0x8,R30
                 ; 0000 0051 // SFIOR=0x00;
                 ; 0000 0052 
                 ; 0000 0053 // ADC initialization
                 ; 0000 0054 // ADC Clock frequency: 1000.000 kHz
                 ; 0000 0055 // ADC Voltage Reference: AVCC pin
                 ; 0000 0056 // ADC Auto Trigger Source: Timer1 Overflow
                 ; 0000 0057 ADMUX=ADC_VREF_TYPE & 0xff;
00007f e4e0      	LDI  R30,LOW(64)
000080 b9e7      	OUT  0x7,R30
                 ; 0000 0058 ADCSRA=0xAC;
000081 eaec      	LDI  R30,LOW(172)
000082 b9e6      	OUT  0x6,R30
                 ; 0000 0059 SFIOR&=0x1F;
000083 b7e0      	IN   R30,0x30
000084 71ef      	ANDI R30,LOW(0x1F)
000085 bfe0      	OUT  0x30,R30
                 ; 0000 005A SFIOR|=0xC0;
000086 b7e0      	IN   R30,0x30
000087 6ce0      	ORI  R30,LOW(0xC0)
000088 bfe0      	OUT  0x30,R30
                 ; 0000 005B 
                 ; 0000 005C 
                 ; 0000 005D // Global enable interrupts
                 ; 0000 005E #asm("sei")
000089 9478      	sei
                 ; 0000 005F 
                 ; 0000 0060 while (1)
                 _0x3:
                 ; 0000 0061       {
                 ; 0000 0062       // Place your code here
                 ; 0000 0063           printf("adc_value: %d\n", adc_value);
                +
00008a e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00008b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00008c 93fa      	ST   -Y,R31
00008d 93ea      	ST   -Y,R30
00008e 01f2      	MOVW R30,R4
00008f 2766      	CLR  R22
000090 2777      	CLR  R23
000091 940e 026f 	CALL __PUTPARD1
000093 e084      	LDI  R24,4
000094 940e 01fa 	CALL _printf
000096 9626      	ADIW R28,6
                 ; 0000 0064 
                 ; 0000 0065       if (newdata == 1)
000097 91a0 0160 	LDS  R26,_newdata
000099 30a1      	CPI  R26,LOW(0x1)
00009a f441      	BRNE _0x6
                 ; 0000 0066         {
                 ; 0000 0067         newdata = 0;
00009b e0e0      	LDI  R30,LOW(0)
00009c 93e0 0160 	STS  _newdata,R30
                 ; 0000 0068         transmit_times++;
00009e 91e0 0161 	LDS  R30,_transmit_times
0000a0 5fef      	SUBI R30,-LOW(1)
0000a1 93e0 0161 	STS  _transmit_times,R30
                 ; 0000 0069         }
                 ; 0000 006A 
                 ; 0000 006B       if (transmit_times == 1) {putchar('1');}
                 _0x6:
0000a3 91a0 0161 	LDS  R26,_transmit_times
0000a5 30a1      	CPI  R26,LOW(0x1)
0000a6 f419      	BRNE _0x7
0000a7 e3e1      	LDI  R30,LOW(49)
0000a8 93ea      	ST   -Y,R30
0000a9 d009      	RCALL _putchar
                 ; 0000 006C       if (transmit_times == 2) {putchar('2');}
                 _0x7:
0000aa 91a0 0161 	LDS  R26,_transmit_times
0000ac 30a2      	CPI  R26,LOW(0x2)
0000ad f419      	BRNE _0x8
0000ae e3e2      	LDI  R30,LOW(50)
0000af 93ea      	ST   -Y,R30
0000b0 d002      	RCALL _putchar
                 ; 0000 006D 
                 ; 0000 006E         }
                 _0x8:
0000b1 cfd8      	RJMP _0x3
                 ; 0000 006F 
                 ; 0000 0070 }
                 _0x9:
0000b2 cfff      	RJMP _0x9
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 putchar0:
0000b3 9b5d           sbis usr,udre
0000b4 cffe           rjmp putchar0
0000b5 81e8           ld   r30,y
0000b6 b9ec           out  udr,r30
0000b7 9621      	ADIW R28,1
0000b8 9508      	RET
                 _put_usart_G100:
0000b9 81ea      	LDD  R30,Y+2
0000ba 93ea      	ST   -Y,R30
0000bb dff7      	RCALL _putchar
0000bc 81a8      	LD   R26,Y
0000bd 81b9      	LDD  R27,Y+1
0000be 91ed      	LD   R30,X+
0000bf 91fd      	LD   R31,X+
0000c0 9631      	ADIW R30,1
0000c1 93fe      	ST   -X,R31
0000c2 93ee      	ST   -X,R30
0000c3 9623      	ADIW R28,3
0000c4 9508      	RET
                 __print_G100:
0000c5 9726      	SBIW R28,6
0000c6 940e 0274 	CALL __SAVELOCR6
0000c8 e010      	LDI  R17,0
0000c9 85ac      	LDD  R26,Y+12
0000ca 85bd      	LDD  R27,Y+12+1
0000cb e0e0      	LDI  R30,LOW(0)
0000cc e0f0      	LDI  R31,HIGH(0)
0000cd 93ed      	ST   X+,R30
0000ce 93fc      	ST   X,R31
                 _0x2000016:
0000cf 89ea      	LDD  R30,Y+18
0000d0 89fb      	LDD  R31,Y+18+1
0000d1 9631      	ADIW R30,1
0000d2 8bea      	STD  Y+18,R30
0000d3 8bfb      	STD  Y+18+1,R31
0000d4 9731      	SBIW R30,1
0000d5 91e4      	LPM  R30,Z
0000d6 2f2e      	MOV  R18,R30
0000d7 30e0      	CPI  R30,0
0000d8 f411      	BRNE PC+3
0000d9 940c 01f2 	JMP _0x2000018
0000db 2fe1      	MOV  R30,R17
0000dc 30e0      	CPI  R30,0
0000dd f439      	BRNE _0x200001C
0000de 3225      	CPI  R18,37
0000df f411      	BRNE _0x200001D
0000e0 e011      	LDI  R17,LOW(1)
0000e1 c002      	RJMP _0x200001E
                 _0x200001D:
0000e2 940e 0236 	CALL SUBOPT_0x0
                 _0x200001E:
0000e4 c10c      	RJMP _0x200001B
                 _0x200001C:
0000e5 30e1      	CPI  R30,LOW(0x1)
0000e6 f4a9      	BRNE _0x200001F
0000e7 3225      	CPI  R18,37
0000e8 f419      	BRNE _0x2000020
0000e9 940e 0236 	CALL SUBOPT_0x0
0000eb c104      	RJMP _0x20000C9
                 _0x2000020:
0000ec e012      	LDI  R17,LOW(2)
0000ed e040      	LDI  R20,LOW(0)
0000ee e000      	LDI  R16,LOW(0)
0000ef 322d      	CPI  R18,45
0000f0 f411      	BRNE _0x2000021
0000f1 e001      	LDI  R16,LOW(1)
0000f2 c0fe      	RJMP _0x200001B
                 _0x2000021:
0000f3 322b      	CPI  R18,43
0000f4 f411      	BRNE _0x2000022
0000f5 e24b      	LDI  R20,LOW(43)
0000f6 c0fa      	RJMP _0x200001B
                 _0x2000022:
0000f7 3220      	CPI  R18,32
0000f8 f411      	BRNE _0x2000023
0000f9 e240      	LDI  R20,LOW(32)
0000fa c0f6      	RJMP _0x200001B
                 _0x2000023:
0000fb c002      	RJMP _0x2000024
                 _0x200001F:
0000fc 30e2      	CPI  R30,LOW(0x2)
0000fd f439      	BRNE _0x2000025
                 _0x2000024:
0000fe e050      	LDI  R21,LOW(0)
0000ff e013      	LDI  R17,LOW(3)
000100 3320      	CPI  R18,48
000101 f411      	BRNE _0x2000026
000102 6800      	ORI  R16,LOW(128)
000103 c0ed      	RJMP _0x200001B
                 _0x2000026:
000104 c004      	RJMP _0x2000027
                 _0x2000025:
000105 30e3      	CPI  R30,LOW(0x3)
000106 f011      	BREQ PC+3
000107 940c 01f1 	JMP _0x200001B
                 _0x2000027:
000109 3320      	CPI  R18,48
00010a f010      	BRLO _0x200002A
00010b 332a      	CPI  R18,58
00010c f008      	BRLO _0x200002B
                 _0x200002A:
00010d c007      	RJMP _0x2000029
                 _0x200002B:
00010e e0aa      	LDI  R26,LOW(10)
00010f 9f5a      	MUL  R21,R26
000110 2d50      	MOV  R21,R0
000111 2fe2      	MOV  R30,R18
000112 53e0      	SUBI R30,LOW(48)
000113 0f5e      	ADD  R21,R30
000114 c0dc      	RJMP _0x200001B
                 _0x2000029:
000115 2fe2      	MOV  R30,R18
000116 36e3      	CPI  R30,LOW(0x63)
000117 f449      	BRNE _0x200002F
000118 940e 023f 	CALL SUBOPT_0x1
00011a 89e8      	LDD  R30,Y+16
00011b 89f9      	LDD  R31,Y+16+1
00011c 81a4      	LDD  R26,Z+4
00011d 93aa      	ST   -Y,R26
00011e 940e 0245 	CALL SUBOPT_0x2
000120 c0cf      	RJMP _0x2000030
                 _0x200002F:
000121 37e3      	CPI  R30,LOW(0x73)
000122 f441      	BRNE _0x2000032
000123 940e 023f 	CALL SUBOPT_0x1
000125 940e 024d 	CALL SUBOPT_0x3
000127 940e 0221 	CALL _strlen
000129 2f1e      	MOV  R17,R30
00012a c00a      	RJMP _0x2000033
                 _0x2000032:
00012b 37e0      	CPI  R30,LOW(0x70)
00012c f461      	BRNE _0x2000035
00012d 940e 023f 	CALL SUBOPT_0x1
00012f 940e 024d 	CALL SUBOPT_0x3
000131 940e 022b 	CALL _strlenf
000133 2f1e      	MOV  R17,R30
000134 6008      	ORI  R16,LOW(8)
                 _0x2000033:
000135 6002      	ORI  R16,LOW(2)
000136 770f      	ANDI R16,LOW(127)
000137 e030      	LDI  R19,LOW(0)
000138 c035      	RJMP _0x2000036
                 _0x2000035:
000139 36e4      	CPI  R30,LOW(0x64)
00013a f011      	BREQ _0x2000039
00013b 36e9      	CPI  R30,LOW(0x69)
00013c f411      	BRNE _0x200003A
                 _0x2000039:
00013d 6004      	ORI  R16,LOW(4)
00013e c002      	RJMP _0x200003B
                 _0x200003A:
00013f 37e5      	CPI  R30,LOW(0x75)
000140 f431      	BRNE _0x200003C
                 _0x200003B:
000141 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
000142 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
000143 83ee      	STD  Y+6,R30
000144 83ff      	STD  Y+6+1,R31
000145 e015      	LDI  R17,LOW(5)
000146 c00d      	RJMP _0x200003D
                 _0x200003C:
000147 35e8      	CPI  R30,LOW(0x58)
000148 f411      	BRNE _0x200003F
000149 6008      	ORI  R16,LOW(8)
00014a c004      	RJMP _0x2000040
                 _0x200003F:
00014b 37e8      	CPI  R30,LOW(0x78)
00014c f011      	BREQ PC+3
00014d 940c 01f0 	JMP _0x2000071
                 _0x2000040:
00014f e5ee      	LDI  R30,LOW(_tbl16_G100*2)
000150 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
000151 83ee      	STD  Y+6,R30
000152 83ff      	STD  Y+6+1,R31
000153 e014      	LDI  R17,LOW(4)
                 _0x200003D:
000154 ff02      	SBRS R16,2
000155 c014      	RJMP _0x2000042
000156 940e 023f 	CALL SUBOPT_0x1
000158 940e 0257 	CALL SUBOPT_0x4
00015a 85ab      	LDD  R26,Y+11
00015b 23aa      	TST  R26
00015c f43a      	BRPL _0x2000043
00015d 85ea      	LDD  R30,Y+10
00015e 85fb      	LDD  R31,Y+10+1
00015f 940e 0263 	CALL __ANEGW1
000161 87ea      	STD  Y+10,R30
000162 87fb      	STD  Y+10+1,R31
000163 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
000164 3040      	CPI  R20,0
000165 f011      	BREQ _0x2000044
000166 5f1f      	SUBI R17,-LOW(1)
000167 c001      	RJMP _0x2000045
                 _0x2000044:
000168 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
000169 c004      	RJMP _0x2000046
                 _0x2000042:
00016a 940e 023f 	CALL SUBOPT_0x1
00016c 940e 0257 	CALL SUBOPT_0x4
                 _0x2000046:
                 _0x2000036:
00016e fd00      	SBRC R16,0
00016f c011      	RJMP _0x2000047
                 _0x2000048:
000170 1715      	CP   R17,R21
000171 f478      	BRSH _0x200004A
000172 ff07      	SBRS R16,7
000173 c008      	RJMP _0x200004B
000174 ff02      	SBRS R16,2
000175 c004      	RJMP _0x200004C
000176 7f0b      	ANDI R16,LOW(251)
000177 2f24      	MOV  R18,R20
000178 5011      	SUBI R17,LOW(1)
000179 c001      	RJMP _0x200004D
                 _0x200004C:
00017a e320      	LDI  R18,LOW(48)
                 _0x200004D:
00017b c001      	RJMP _0x200004E
                 _0x200004B:
00017c e220      	LDI  R18,LOW(32)
                 _0x200004E:
00017d 940e 0236 	CALL SUBOPT_0x0
00017f 5051      	SUBI R21,LOW(1)
000180 cfef      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000181 2f31      	MOV  R19,R17
000182 ff01      	SBRS R16,1
000183 c017      	RJMP _0x200004F
                 _0x2000050:
000184 3030      	CPI  R19,0
000185 f0a1      	BREQ _0x2000052
000186 ff03      	SBRS R16,3
000187 c006      	RJMP _0x2000053
000188 81ee      	LDD  R30,Y+6
000189 81ff      	LDD  R31,Y+6+1
00018a 9125      	LPM  R18,Z+
00018b 83ee      	STD  Y+6,R30
00018c 83ff      	STD  Y+6+1,R31
00018d c005      	RJMP _0x2000054
                 _0x2000053:
00018e 81ae      	LDD  R26,Y+6
00018f 81bf      	LDD  R27,Y+6+1
000190 912d      	LD   R18,X+
000191 83ae      	STD  Y+6,R26
000192 83bf      	STD  Y+6+1,R27
                 _0x2000054:
000193 940e 0236 	CALL SUBOPT_0x0
000195 3050      	CPI  R21,0
000196 f009      	BREQ _0x2000055
000197 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000198 5031      	SUBI R19,LOW(1)
000199 cfea      	RJMP _0x2000050
                 _0x2000052:
00019a c04b      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
00019b e320      	LDI  R18,LOW(48)
00019c 81ee      	LDD  R30,Y+6
00019d 81ff      	LDD  R31,Y+6+1
00019e 940e 026b 	CALL __GETW1PF
0001a0 87e8      	STD  Y+8,R30
0001a1 87f9      	STD  Y+8+1,R31
0001a2 81ee      	LDD  R30,Y+6
0001a3 81ff      	LDD  R31,Y+6+1
0001a4 9632      	ADIW R30,2
0001a5 83ee      	STD  Y+6,R30
0001a6 83ff      	STD  Y+6+1,R31
                 _0x200005A:
0001a7 85e8      	LDD  R30,Y+8
0001a8 85f9      	LDD  R31,Y+8+1
0001a9 85aa      	LDD  R26,Y+10
0001aa 85bb      	LDD  R27,Y+10+1
0001ab 17ae      	CP   R26,R30
0001ac 07bf      	CPC  R27,R31
0001ad f050      	BRLO _0x200005C
0001ae 5f2f      	SUBI R18,-LOW(1)
0001af 85a8      	LDD  R26,Y+8
0001b0 85b9      	LDD  R27,Y+8+1
0001b1 85ea      	LDD  R30,Y+10
0001b2 85fb      	LDD  R31,Y+10+1
0001b3 1bea      	SUB  R30,R26
0001b4 0bfb      	SBC  R31,R27
0001b5 87ea      	STD  Y+10,R30
0001b6 87fb      	STD  Y+10+1,R31
0001b7 cfef      	RJMP _0x200005A
                 _0x200005C:
0001b8 332a      	CPI  R18,58
0001b9 f028      	BRLO _0x200005D
0001ba ff03      	SBRS R16,3
0001bb c002      	RJMP _0x200005E
0001bc 5f29      	SUBI R18,-LOW(7)
0001bd c001      	RJMP _0x200005F
                 _0x200005E:
0001be 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
0001bf fd04      	SBRC R16,4
0001c0 c01a      	RJMP _0x2000061
0001c1 3321      	CPI  R18,49
0001c2 f420      	BRSH _0x2000063
0001c3 85a8      	LDD  R26,Y+8
0001c4 85b9      	LDD  R27,Y+8+1
0001c5 9711      	SBIW R26,1
0001c6 f409      	BRNE _0x2000062
                 _0x2000063:
0001c7 c009      	RJMP _0x20000CA
                 _0x2000062:
0001c8 1753      	CP   R21,R19
0001c9 f010      	BRLO _0x2000067
0001ca ff00      	SBRS R16,0
0001cb c001      	RJMP _0x2000068
                 _0x2000067:
0001cc c013      	RJMP _0x2000066
                 _0x2000068:
0001cd e220      	LDI  R18,LOW(32)
0001ce ff07      	SBRS R16,7
0001cf c00b      	RJMP _0x2000069
0001d0 e320      	LDI  R18,LOW(48)
                 _0x20000CA:
0001d1 6100      	ORI  R16,LOW(16)
0001d2 ff02      	SBRS R16,2
0001d3 c007      	RJMP _0x200006A
0001d4 7f0b      	ANDI R16,LOW(251)
0001d5 934a      	ST   -Y,R20
0001d6 940e 0245 	CALL SUBOPT_0x2
0001d8 3050      	CPI  R21,0
0001d9 f009      	BREQ _0x200006B
0001da 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
0001db 940e 0236 	CALL SUBOPT_0x0
0001dd 3050      	CPI  R21,0
0001de f009      	BREQ _0x200006C
0001df 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
0001e0 5031      	SUBI R19,LOW(1)
0001e1 85a8      	LDD  R26,Y+8
0001e2 85b9      	LDD  R27,Y+8+1
0001e3 9712      	SBIW R26,2
0001e4 f008      	BRLO _0x2000059
0001e5 cfb5      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
0001e6 ff00      	SBRS R16,0
0001e7 c008      	RJMP _0x200006D
                 _0x200006E:
0001e8 3050      	CPI  R21,0
0001e9 f031      	BREQ _0x2000070
0001ea 5051      	SUBI R21,LOW(1)
0001eb e2e0      	LDI  R30,LOW(32)
0001ec 93ea      	ST   -Y,R30
0001ed 940e 0245 	CALL SUBOPT_0x2
0001ef cff8      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000C9:
0001f0 e010      	LDI  R17,LOW(0)
                 _0x200001B:
0001f1 cedd      	RJMP _0x2000016
                 _0x2000018:
0001f2 85ac      	LDD  R26,Y+12
0001f3 85bd      	LDD  R27,Y+12+1
0001f4 940e 0267 	CALL __GETW1P
0001f6 940e 027b 	CALL __LOADLOCR6
0001f8 9664      	ADIW R28,20
0001f9 9508      	RET
                 _printf:
0001fa 92ff      	PUSH R15
0001fb 2ef8      	MOV  R15,R24
0001fc 9726      	SBIW R28,6
0001fd 931a      	ST   -Y,R17
0001fe 930a      	ST   -Y,R16
0001ff 01de      	MOVW R26,R28
000200 9614      	ADIW R26,4
000201 940e 025f 	CALL __ADDW2R15
000203 018d      	MOVW R16,R26
000204 e0e0      	LDI  R30,LOW(0)
000205 83ec      	STD  Y+4,R30
000206 83ed      	STD  Y+4+1,R30
000207 83ee      	STD  Y+6,R30
000208 83ef      	STD  Y+6+1,R30
000209 01de      	MOVW R26,R28
00020a 9618      	ADIW R26,8
00020b 940e 025f 	CALL __ADDW2R15
00020d 940e 0267 	CALL __GETW1P
00020f 93fa      	ST   -Y,R31
000210 93ea      	ST   -Y,R30
000211 931a      	ST   -Y,R17
000212 930a      	ST   -Y,R16
000213 ebe9      	LDI  R30,LOW(_put_usart_G100)
000214 e0f0      	LDI  R31,HIGH(_put_usart_G100)
000215 93fa      	ST   -Y,R31
000216 93ea      	ST   -Y,R30
000217 01fe      	MOVW R30,R28
000218 9638      	ADIW R30,8
000219 93fa      	ST   -Y,R31
00021a 93ea      	ST   -Y,R30
00021b dea9      	RCALL __print_G100
00021c 8119      	LDD  R17,Y+1
00021d 8108      	LDD  R16,Y+0
00021e 9628      	ADIW R28,8
00021f 90ff      	POP  R15
000220 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
000221 91a9          ld   r26,y+
000222 91b9          ld   r27,y+
000223 27ee          clr  r30
000224 27ff          clr  r31
                 strlen0:
000225 916d          ld   r22,x+
000226 2366          tst  r22
000227 f011          breq strlen1
000228 9631          adiw r30,1
000229 cffb          rjmp strlen0
                 strlen1:
00022a 9508          ret
                 _strlenf:
00022b 27aa          clr  r26
00022c 27bb          clr  r27
00022d 91e9          ld   r30,y+
00022e 91f9          ld   r31,y+
                 strlenf0:
00022f 9005      	lpm  r0,z+
000230 2000          tst  r0
000231 f011          breq strlenf1
000232 9611          adiw r26,1
000233 cffb          rjmp strlenf0
                 strlenf1:
000234 01fd          movw r30,r26
000235 9508          ret
                 
                 	.DSEG
                 _newdata:
000160           	.BYTE 0x1
                 _transmit_times:
000161           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x0:
000236 932a      	ST   -Y,R18
000237 85ed      	LDD  R30,Y+13
000238 85fe      	LDD  R31,Y+13+1
000239 93fa      	ST   -Y,R31
00023a 93ea      	ST   -Y,R30
00023b 89e9      	LDD  R30,Y+17
00023c 89fa      	LDD  R31,Y+17+1
00023d 9509      	ICALL
00023e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
00023f 89e8      	LDD  R30,Y+16
000240 89f9      	LDD  R31,Y+16+1
000241 9734      	SBIW R30,4
000242 8be8      	STD  Y+16,R30
000243 8bf9      	STD  Y+16+1,R31
000244 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
000245 85ed      	LDD  R30,Y+13
000246 85fe      	LDD  R31,Y+13+1
000247 93fa      	ST   -Y,R31
000248 93ea      	ST   -Y,R30
000249 89e9      	LDD  R30,Y+17
00024a 89fa      	LDD  R31,Y+17+1
00024b 9509      	ICALL
00024c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3:
00024d 89a8      	LDD  R26,Y+16
00024e 89b9      	LDD  R27,Y+16+1
00024f 9614      	ADIW R26,4
000250 940e 0267 	CALL __GETW1P
000252 83ee      	STD  Y+6,R30
000253 83ff      	STD  Y+6+1,R31
000254 93fa      	ST   -Y,R31
000255 93ea      	ST   -Y,R30
000256 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
000257 89a8      	LDD  R26,Y+16
000258 89b9      	LDD  R27,Y+16+1
000259 9614      	ADIW R26,4
00025a 940e 0267 	CALL __GETW1P
00025c 87ea      	STD  Y+10,R30
00025d 87fb      	STD  Y+10+1,R31
00025e 9508      	RET
                 
                 
                 	.CSEG
                 __ADDW2R15:
00025f 2400      	CLR  R0
000260 0daf      	ADD  R26,R15
000261 1db0      	ADC  R27,R0
000262 9508      	RET
                 
                 __ANEGW1:
000263 95f1      	NEG  R31
000264 95e1      	NEG  R30
000265 40f0      	SBCI R31,0
000266 9508      	RET
                 
                 __GETW1P:
000267 91ed      	LD   R30,X+
000268 91fc      	LD   R31,X
000269 9711      	SBIW R26,1
00026a 9508      	RET
                 
                 __GETW1PF:
00026b 9005      	LPM  R0,Z+
00026c 91f4      	LPM  R31,Z
00026d 2de0      	MOV  R30,R0
00026e 9508      	RET
                 
                 __PUTPARD1:
00026f 937a      	ST   -Y,R23
000270 936a      	ST   -Y,R22
000271 93fa      	ST   -Y,R31
000272 93ea      	ST   -Y,R30
000273 9508      	RET
                 
                 __SAVELOCR6:
000274 935a      	ST   -Y,R21
                 __SAVELOCR5:
000275 934a      	ST   -Y,R20
                 __SAVELOCR4:
000276 933a      	ST   -Y,R19
                 __SAVELOCR3:
000277 932a      	ST   -Y,R18
                 __SAVELOCR2:
000278 931a      	ST   -Y,R17
000279 930a      	ST   -Y,R16
00027a 9508      	RET
                 
                 __LOADLOCR6:
00027b 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00027c 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00027d 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00027e 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00027f 8119      	LDD  R17,Y+1
000280 8108      	LD   R16,Y
000281 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :   7 r1 :   0 r2 :   0 r3 :   0 r4 :   2 r5 :   1 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  30 r17:  19 r18:  27 r19:   8 r20:   9 r21:  17 r22:   4 r23:   2 
r24:   6 r25:   1 r26:  42 r27:  17 r28:  11 r29:   1 r30: 151 r31:  52 
x  :  12 y  : 126 z  :   6 
Registers used: 23 out of 35 (65.7%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   1 add   :   2 
adiw  :  15 and   :   0 andi  :   5 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  11 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  22 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  31 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   9 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   1 cpi   :  32 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   4 inc   :   0 jmp   :  25 ld    :  14 ldd   :  55 ldi   :  59 
lds   :   4 lpm   :   7 lsl   :   0 lsr   :   0 mov   :  11 movw  :   6 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   7 out   :  32 pop   :   1 push  :   1 rcall :   4 ret   :  18 
reti  :   1 rjmp  :  49 rol   :   0 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :   3 sbic  :   0 sbis  :   1 sbiw  :   8 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  42 std   :  28 sts   :   3 sub   :   1 subi  :  14 swap  :   0 
tst   :   3 wdr   :   0 
Instructions used: 50 out of 116 (43.1%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000504   1250     34   1284   16384   7.8%
[.dseg] 0x000060 0x000162      0      2      2    1119   0.2%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 2 warnings
