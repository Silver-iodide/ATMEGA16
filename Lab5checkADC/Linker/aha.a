;/*****************************************************
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#include <delay.h>
;
;// Standard Input/Output functions
;#include <stdio.h>
;
;#define ADC_VREF_TYPE 0x40
;volatile char newdata = 0;
;volatile char transmit_times = 0;
;unsigned int adc_value;
;
;// ADC interrupt service routine
;interrupt [ADC_INT] void adc_isr(void)
; 0000 0018 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0019 ADCSRA |= (1 << ADIF);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 001A 
; 0000 001B // Read the AD conversion result
; 0000 001C adc_value = ADCW;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 001D 
; 0000 001E newdata = 1;
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 1
; 0000 001F // putchar('A');
; 0000 0020 }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0025 {
;PCODE: $00000018 VOL: 0
; 0000 0026 // Declare your local variables here
; 0000 0027 
; 0000 0028 // Timer/Counter 1 initialization
; 0000 0029 // Clock source: System Clock
; 0000 002A // Clock value: 16000.000 kHz
; 0000 002B // Mode: Normal top=0xFFFF
; 0000 002C TCCR1A=0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 002D TCCR1B=0x01;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 002E TCNT1H=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 002F TCNT1L=0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0030 ICR1H=0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0031 ICR1L=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0032 OCR1AH=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0033 OCR1AL=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0034 OCR1BH=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0035 OCR1BL=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0036 
; 0000 0037 
; 0000 0038 // External Interrupt(s) initialization
; 0000 0039 MCUCR=0x00;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 003A MCUCSR=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 003B 
; 0000 003C // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 003D TIMSK=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 003E 
; 0000 003F // USART initialization
; 0000 0040 // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0041 // USART Receiver: On
; 0000 0042 // USART Transmitter: On
; 0000 0043 // USART Mode: Asynchronous
; 0000 0044 // USART Baud Rate: 9600
; 0000 0045 UCSRA=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0046 UCSRB=0x18;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0047 UCSRC=0x86;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0048 UBRRH=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0049 UBRRL=0x67;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 004A UCSRB |= (1 << RXCIE);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 004B UCSRB |= (1 << TXCIE);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 004C 
; 0000 004D // Analog Comparator initialization
; 0000 004E // Analog Comparator: Off
; 0000 004F // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0050 ACSR=0x80;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0051 // SFIOR=0x00;
; 0000 0052 
; 0000 0053 // ADC initialization
; 0000 0054 // ADC Clock frequency: 1000.000 kHz
; 0000 0055 // ADC Voltage Reference: AVCC pin
; 0000 0056 // ADC Auto Trigger Source: Timer1 Overflow
; 0000 0057 ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0058 ADCSRA=0xAC;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0059 SFIOR&=0x1F;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 005A SFIOR|=0xC0;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 005B 
; 0000 005C 
; 0000 005D // Global enable interrupts
; 0000 005E #asm("sei")
;PCODE: $0000004D VOL: 0
	sei
;PCODE: $0000004E VOL: 0
; 0000 005F 
; 0000 0060 while (1)
;PCODE: $0000004F VOL: 0
; 0000 0061       {
; 0000 0062       // Place your code here
; 0000 0063           printf("adc_value: %d\n", adc_value);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0064 
; 0000 0065       if (newdata == 1)
;PCODE: $0000005A VOL: 1
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0066         {
; 0000 0067         newdata = 0;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 1
; 0000 0068         transmit_times++;
;PCODE: $0000005F VOL: 1
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 1
; 0000 0069         }
; 0000 006A 
; 0000 006B       if (transmit_times == 1) {putchar('1');}
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 1
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 006C       if (transmit_times == 2) {putchar('2');}
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 1
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 006D 
; 0000 006E         }
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 006F 
; 0000 0070 }
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
