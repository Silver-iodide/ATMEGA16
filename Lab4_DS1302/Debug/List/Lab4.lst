
AVRASM ver. 2.1.30  C:\cvavreval\BIN\Lab4_DS1302\Debug\List\Lab4.asm Tue Aug 13 20:29:52 2024

C:\cvavreval\BIN\Lab4_DS1302\Debug\List\Lab4.asm(1418): warning: Register r5 already defined by the .DEF directive
C:\cvavreval\BIN\Lab4_DS1302\Debug\List\Lab4.asm(1419): warning: Register r4 already defined by the .DEF directive
C:\cvavreval\BIN\Lab4_DS1302\Debug\List\Lab4.asm(1420): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V4.02 
                 ;(C) Copyright 1998-2024 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 16.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPMCSR=0x37
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.EQU __FLASH_PAGE_SIZE=0x40
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004c 	JMP  __RESET
000002 940c 0079 	JMP  _ext_int0_isr
000004 940c 007a 	JMP  _ext_int1_isr
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6954
000034 656d
000035 203a
000036 3225      	.DB  0x54,0x69,0x6D,0x65,0x3A,0x20,0x25,0x32
000037 3a64
000038 3025
000039 6432
00003a 253a      	.DB  0x64,0x3A,0x25,0x30,0x32,0x64,0x3A,0x25
00003b 3230
00003c 0a64
00003d 4400
00003e 7461      	.DB  0x30,0x32,0x64,0xA,0x0,0x44,0x61,0x74
00003f 3a65
000040 2520
000041 6432
000042 252f      	.DB  0x65,0x3A,0x20,0x25,0x32,0x64,0x2F,0x25
000043 3230
000044 2f64
000045 6425
C:\cvavreval\BIN\Lab4_DS1302\Debug\List\Lab4.asm(1462): warning: .cseg .db misalignment - padding zero byte
000046 0000      	.DB  0x30,0x32,0x64,0x2F,0x25,0x64,0x0
                 _0x2020003:
000047 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000048 0002      	.DW  0x02
000049 0170      	.DW  __base_y_G101
00004a 008e      	.DW  _0x2020003*2
                 
                 _0xFFFFFFFF:
00004b 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00004c 94f8      	CLI
                 
00004d 27ee      	CLR  R30
00004e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00004f e0f1      	LDI  R31,1
000050 bffb      	OUT  GICR,R31
000051 bfeb      	OUT  GICR,R30
000052 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000053 e08d      	LDI  R24,(14-2)+1
000054 e0a2      	LDI  R26,2
000055 27bb      	CLR  R27
                 __CLEAR_REG:
000056 93ed      	ST   X+,R30
000057 958a      	DEC  R24
000058 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000059 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005a e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005b e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00005c 93ed      	ST   X+,R30
00005d 9701      	SBIW R24,1
00005e f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00005f e9e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000060 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000061 9185      	LPM  R24,Z+
000062 9195      	LPM  R25,Z+
000063 9700      	SBIW R24,0
000064 f061      	BREQ __GLOBAL_INI_END
000065 91a5      	LPM  R26,Z+
000066 91b5      	LPM  R27,Z+
000067 9005      	LPM  R0,Z+
000068 9015      	LPM  R1,Z+
000069 01bf      	MOVW R22,R30
00006a 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006b 9005      	LPM  R0,Z+
00006c 920d      	ST   X+,R0
00006d 9701      	SBIW R24,1
00006e f7e1      	BRNE __GLOBAL_INI_LOOP
00006f 01fb      	MOVW R30,R22
000070 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000071 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000072 bfed      	OUT  SPL,R30
000073 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000074 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000075 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000076 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000077 940c 007b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                    .equ __ds1302_port=0x1B ;PORTA
                    .equ __ds1302_io=6
                    .equ __ds1302_sclk=7
                    .equ __ds1302_rst=5
                 ; 0000 0026 #endasm
                 ;interrupt [2] void ext_int0_isr(void)
                 ; 0000 002E {
                 
                 	.CSEG
                 _ext_int0_isr:
                 ; .FSTART _ext_int0_isr
                 ; 0000 002F // Place your code here
                 ; 0000 0030 // To do:
                 ; 0000 0031 }
000079 9518      	RETI
                 ; .FEND
                 ;interrupt [3] void ext_int1_isr(void)
                 ; 0000 0035 {
                 _ext_int1_isr:
                 ; .FSTART _ext_int1_isr
                 ; 0000 0036 // Place your code here
                 ; 0000 0037 
                 ; 0000 0038 }
00007a 9518      	RETI
                 ; .FEND
                 ;void main(void)
                 ; 0000 003E {
                 _main:
                 ; .FSTART _main
                 ; 0000 003F // Declare your local variables here
                 ; 0000 0040 unsigned char hour,min,sec,day,month,year;
                 ; 0000 0041 
                 ; 0000 0042 // Input/Output Ports initialization
                 ; 0000 0043 // Port A initialization
                 ; 0000 0044 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0045 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
                 ;	hour -> R17
                 ;	min -> R16
                 ;	sec -> R19
                 ;	day -> R18
                 ;	month -> R21
                 ;	year -> R20
00007b e0e0      	LDI  R30,LOW(0)
00007c bbea      	OUT  0x1A,R30
                 ; 0000 0046 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0047 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00007d bbeb      	OUT  0x1B,R30
                 ; 0000 0048 
                 ; 0000 0049 // Port B initialization
                 ; 0000 004A // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 004B DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00007e bbe7      	OUT  0x17,R30
                 ; 0000 004C // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 004D PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00007f bbe8      	OUT  0x18,R30
                 ; 0000 004E 
                 ; 0000 004F // Port C initialization
                 ; 0000 0050 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0051 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
000080 bbe4      	OUT  0x14,R30
                 ; 0000 0052 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0053 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000081 bbe5      	OUT  0x15,R30
                 ; 0000 0054 
                 ; 0000 0055 // Port D initialization
                 ; 0000 0056 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0057 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000082 bbe1      	OUT  0x11,R30
                 ; 0000 0058 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0059 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000083 bbe2      	OUT  0x12,R30
                 ; 0000 005A 
                 ; 0000 005B // Timer/Counter 0 initialization
                 ; 0000 005C // Clock source: System Clock
                 ; 0000 005D // Clock value: Timer 0 Stopped
                 ; 0000 005E // Mode: Normal top=0xFF
                 ; 0000 005F // OC0 output: Disconnected
                 ; 0000 0060 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
000084 bfe3      	OUT  0x33,R30
                 ; 0000 0061 TCNT0=0x00;
000085 bfe2      	OUT  0x32,R30
                 ; 0000 0062 OCR0=0x00;
000086 bfec      	OUT  0x3C,R30
                 ; 0000 0063 
                 ; 0000 0064 // Timer/Counter 1 initialization
                 ; 0000 0065 // Clock source: System Clock
                 ; 0000 0066 // Clock value: Timer1 Stopped
                 ; 0000 0067 // Mode: Normal top=0xFFFF
                 ; 0000 0068 // OC1A output: Disconnected
                 ; 0000 0069 // OC1B output: Disconnected
                 ; 0000 006A // Noise Canceler: Off
                 ; 0000 006B // Input Capture on Falling Edge
                 ; 0000 006C // Timer1 Overflow Interrupt: Off
                 ; 0000 006D // Input Capture Interrupt: Off
                 ; 0000 006E // Compare A Match Interrupt: Off
                 ; 0000 006F // Compare B Match Interrupt: Off
                 ; 0000 0070 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
000087 bdef      	OUT  0x2F,R30
                 ; 0000 0071 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
000088 bdee      	OUT  0x2E,R30
                 ; 0000 0072 TCNT1H=0x00;
000089 bded      	OUT  0x2D,R30
                 ; 0000 0073 TCNT1L=0x00;
00008a bdec      	OUT  0x2C,R30
                 ; 0000 0074 ICR1H=0x00;
00008b bde7      	OUT  0x27,R30
                 ; 0000 0075 ICR1L=0x00;
00008c bde6      	OUT  0x26,R30
                 ; 0000 0076 OCR1AH=0x00;
00008d bdeb      	OUT  0x2B,R30
                 ; 0000 0077 OCR1AL=0x00;
00008e bdea      	OUT  0x2A,R30
                 ; 0000 0078 OCR1BH=0x00;
00008f bde9      	OUT  0x29,R30
                 ; 0000 0079 OCR1BL=0x00;
000090 bde8      	OUT  0x28,R30
                 ; 0000 007A 
                 ; 0000 007B // Timer/Counter 2 initialization
                 ; 0000 007C // Clock source: System Clock
                 ; 0000 007D // Clock value: Timer2 Stopped
                 ; 0000 007E // Mode: Normal top=0xFF
                 ; 0000 007F // OC2 output: Disconnected
                 ; 0000 0080 ASSR=0<<AS2;
000091 bde2      	OUT  0x22,R30
                 ; 0000 0081 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
000092 bde5      	OUT  0x25,R30
                 ; 0000 0082 TCNT2=0x00;
000093 bde4      	OUT  0x24,R30
                 ; 0000 0083 OCR2=0x00;
000094 bde3      	OUT  0x23,R30
                 ; 0000 0084 
                 ; 0000 0085 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0086 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000095 bfe9      	OUT  0x39,R30
                 ; 0000 0087 
                 ; 0000 0088 // External Interrupt(s) initialization
                 ; 0000 0089 // INT0: On
                 ; 0000 008A // INT0 Mode: Falling Edge
                 ; 0000 008B // INT1: On
                 ; 0000 008C // INT1 Mode: Falling Edge
                 ; 0000 008D // INT2: Off
                 ; 0000 008E GICR|=(1<<INT1) | (1<<INT0) | (0<<INT2);
000096 b7eb      	IN   R30,0x3B
000097 6ce0      	ORI  R30,LOW(0xC0)
000098 bfeb      	OUT  0x3B,R30
                 ; 0000 008F MCUCR=(1<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
000099 e0ea      	LDI  R30,LOW(10)
00009a bfe5      	OUT  0x35,R30
                 ; 0000 0090 MCUCSR=(0<<ISC2);
00009b e0e0      	LDI  R30,LOW(0)
00009c bfe4      	OUT  0x34,R30
                 ; 0000 0091 GIFR=(1<<INTF1) | (1<<INTF0) | (0<<INTF2);
00009d ece0      	LDI  R30,LOW(192)
00009e bfea      	OUT  0x3A,R30
                 ; 0000 0092 
                 ; 0000 0093 // USART initialization
                 ; 0000 0094 // USART disabled
                 ; 0000 0095 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
00009f e0e0      	LDI  R30,LOW(0)
0000a0 b9ea      	OUT  0xA,R30
                 ; 0000 0096 
                 ; 0000 0097 // Analog Comparator initialization
                 ; 0000 0098 // Analog Comparator: Off
                 ; 0000 0099 // The Analog Comparator's positive input is
                 ; 0000 009A // connected to the AIN0 pin
                 ; 0000 009B // The Analog Comparator's negative input is
                 ; 0000 009C // connected to the AIN1 pin
                 ; 0000 009D ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
0000a1 e8e0      	LDI  R30,LOW(128)
0000a2 b9e8      	OUT  0x8,R30
                 ; 0000 009E SFIOR=(0<<ACME);
0000a3 e0e0      	LDI  R30,LOW(0)
0000a4 bfe0      	OUT  0x30,R30
                 ; 0000 009F 
                 ; 0000 00A0 // ADC initialization
                 ; 0000 00A1 // ADC disabled
                 ; 0000 00A2 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
0000a5 b9e6      	OUT  0x6,R30
                 ; 0000 00A3 
                 ; 0000 00A4 // SPI initialization
                 ; 0000 00A5 // SPI disabled
                 ; 0000 00A6 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
0000a6 b9ed      	OUT  0xD,R30
                 ; 0000 00A7 
                 ; 0000 00A8 // TWI initialization
                 ; 0000 00A9 // TWI disabled
                 ; 0000 00AA TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
0000a7 bfe6      	OUT  0x36,R30
                 ; 0000 00AB 
                 ; 0000 00AC // DS1302 Real Time Clock initialization
                 ; 0000 00AD // Trickle charger: On
                 ; 0000 00AE // Trickle charge resistor: 8K
                 ; 0000 00AF // Trickle charge diode(s): 1
                 ; 0000 00B0 rtc_init(1,1,3);
0000a8 e0e1      	LDI  R30,LOW(1)
0000a9 93ea      	ST   -Y,R30
0000aa 93ea      	ST   -Y,R30
0000ab e0a3      	LDI  R26,LOW(3)
0000ac d2c3      	RCALL _rtc_init
                 ; 0000 00B1 
                 ; 0000 00B2 // Alphanumeric LCD initialization
                 ; 0000 00B3 // Connections are specified in the
                 ; 0000 00B4 // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
                 ; 0000 00B5 // RS: PORTB Bit 0
                 ; 0000 00B6 // RD: PORTB Bit 1
                 ; 0000 00B7 // EN: PORTB Bit 2
                 ; 0000 00B8 // D4: PORTD Bit 4
                 ; 0000 00B9 // D5: PORTD Bit 5
                 ; 0000 00BA // D6: PORTD Bit 6
                 ; 0000 00BB // D7: PORTD Bit 7
                 ; 0000 00BC // Characters/line: 8
                 ; 0000 00BD lcd_init(16);
0000ad e1a0      	LDI  R26,LOW(16)
0000ae d248      	RCALL _lcd_init
                 ; 0000 00BE 
                 ; 0000 00BF // Globally enable interrupts
                 ; 0000 00C0 #asm("sei")
0000af 9478      	SEI
                 ; 0000 00C1 
                 ; 0000 00C2 rtc_set_time(17,48,0); /* set time 17:48:00 */
0000b0 e1e1      	LDI  R30,LOW(17)
0000b1 93ea      	ST   -Y,R30
0000b2 e3e0      	LDI  R30,LOW(48)
0000b3 93ea      	ST   -Y,R30
0000b4 e0a0      	LDI  R26,LOW(0)
0000b5 d2d4      	RCALL _rtc_set_time
                 ; 0000 00C3 
                 ; 0000 00C4 
                 ; 0000 00C5 rtc_set_date(8,13,24); /* set date 8/13/2024 */
0000b6 e0e8      	LDI  R30,LOW(8)
0000b7 93ea      	ST   -Y,R30
0000b8 e0ed      	LDI  R30,LOW(13)
0000b9 93ea      	ST   -Y,R30
0000ba e1a8      	LDI  R26,LOW(24)
0000bb d2e4      	RCALL _rtc_set_date
                 ; 0000 00C6 
                 ; 0000 00C7 
                 ; 0000 00C8 /* display the time and date continuously */
                 ; 0000 00C9 while (1)
                 _0x3:
                 ; 0000 00CA {
                 ; 0000 00CB /* read the time from the RTC */
                 ; 0000 00CC rtc_get_time(&hour,&min,&sec);
0000bc b7ed      	IN   R30,SPL
0000bd b7fe      	IN   R31,SPH
0000be 93fa      	ST   -Y,R31
0000bf 93ea      	ST   -Y,R30
0000c0 931f      	PUSH R17
0000c1 b7ed      	IN   R30,SPL
0000c2 b7fe      	IN   R31,SPH
0000c3 93fa      	ST   -Y,R31
0000c4 93ea      	ST   -Y,R30
0000c5 930f      	PUSH R16
0000c6 b7ad      	IN   R26,SPL
0000c7 b7be      	IN   R27,SPH
0000c8 933f      	PUSH R19
0000c9 d2b9      	RCALL _rtc_get_time
0000ca 913f      	POP  R19
0000cb 910f      	POP  R16
0000cc 911f      	POP  R17
                 ; 0000 00CD 
                 ; 0000 00CE /* read the date from the RTC */
                 ; 0000 00CF rtc_get_date(&day,&month,&year);
0000cd b7ed      	IN   R30,SPL
0000ce b7fe      	IN   R31,SPH
0000cf 93fa      	ST   -Y,R31
0000d0 93ea      	ST   -Y,R30
0000d1 932f      	PUSH R18
0000d2 b7ed      	IN   R30,SPL
0000d3 b7fe      	IN   R31,SPH
0000d4 93fa      	ST   -Y,R31
0000d5 93ea      	ST   -Y,R30
0000d6 935f      	PUSH R21
0000d7 b7ad      	IN   R26,SPL
0000d8 b7be      	IN   R27,SPH
0000d9 934f      	PUSH R20
0000da d2b7      	RCALL _rtc_get_date
0000db 914f      	POP  R20
0000dc 915f      	POP  R21
0000dd 912f      	POP  R18
                 ; 0000 00D0 
                 ; 0000 00D1 /* display the time on the LCD */
                 ; 0000 00D2 sprintf(display_buffer,"Time: %2d:%02d:%02d\n",hour,min,sec);
0000de d304      	RCALL SUBOPT_0x0
                +
0000df e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000e0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000e1 93fa      	ST   -Y,R31
0000e2 93ea      	ST   -Y,R30
0000e3 2fe1      	MOV  R30,R17
0000e4 d303      	RCALL SUBOPT_0x1
0000e5 2fe0      	MOV  R30,R16
0000e6 d301      	RCALL SUBOPT_0x1
0000e7 2fe3      	MOV  R30,R19
0000e8 d2ff      	RCALL SUBOPT_0x1
0000e9 e08c      	LDI  R24,12
0000ea d175      	RCALL _sprintf
0000eb 9660      	ADIW R28,16
                 ; 0000 00D3 lcd_clear();
0000ec d1db      	RCALL _lcd_clear
                 ; 0000 00D4 lcd_puts(display_buffer);
0000ed e6a0      	LDI  R26,LOW(_display_buffer)
0000ee e0b1      	LDI  R27,HIGH(_display_buffer)
0000ef d1f8      	RCALL _lcd_puts
                 ; 0000 00D5 
                 ; 0000 00D6 /* display the date on the LCD */
                 ; 0000 00D7 sprintf(display_buffer,"Date: %2d/%02d/%d",day,month,2000+year);
0000f0 d2f2      	RCALL SUBOPT_0x0
                +
0000f1 e7eb     +LDI R30 , LOW ( 2 * _0x0 + ( 21 ) )
0000f2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 21 ) )
                 	__POINTW1FN _0x0,21
0000f3 93fa      	ST   -Y,R31
0000f4 93ea      	ST   -Y,R30
0000f5 2fe2      	MOV  R30,R18
0000f6 d2f1      	RCALL SUBOPT_0x1
0000f7 2fe5      	MOV  R30,R21
0000f8 d2ef      	RCALL SUBOPT_0x1
0000f9 2fe4      	MOV  R30,R20
0000fa e0f0      	LDI  R31,0
0000fb 53e0      	SUBI R30,LOW(-2000)
0000fc 4ff8      	SBCI R31,HIGH(-2000)
                +
0000fd 2f6f     +MOV R22 , R31
0000fe 0f66     +ADD R22 , R22
0000ff 0b66     +SBC R22 , R22
000100 2f76     +MOV R23 , R22
                 	__CWD1
000101 d35f      	RCALL __PUTPARD1
000102 e08c      	LDI  R24,12
000103 d15c      	RCALL _sprintf
000104 9660      	ADIW R28,16
                 ; 0000 00D8 lcd_puts(display_buffer);
000105 e6a0      	LDI  R26,LOW(_display_buffer)
000106 e0b1      	LDI  R27,HIGH(_display_buffer)
000107 d1e0      	RCALL _lcd_puts
                 ; 0000 00D9 
                 ; 0000 00DA 
                 ; 0000 00DB delay_ms(500); /* 0.5 second delay */
000108 efa4      	LDI  R26,LOW(500)
000109 e0b1      	LDI  R27,HIGH(500)
00010a d35b      	RCALL _delay_ms
                 ; 0000 00DC }
00010b cfb0      	RJMP _0x3
                 ; 0000 00DD 
                 ; 0000 00DE }
                 _0x6:
00010c cfff      	RJMP _0x6
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
00010d d33d      	RCALL __SAVELOCR6
00010e 019d      	MOVW R18,R26
00010f 815e      	LDD  R21,Y+6
000110 9612      	ADIW R26,2
                +
000111 91ed     +LD R30 , X +
000112 91fc     +LD R31 , X
000113 9711     +SBIW R26 , 1
                 	__GETW1P
000114 9730      	SBIW R30,0
000115 f0e9      	BREQ _0x2000010
000116 01d9      	MOVW R26,R18
000117 d2d5      	RCALL SUBOPT_0x2
000118 018f      	MOVW R16,R30
000119 9730      	SBIW R30,0
00011a f059      	BREQ _0x2000012
                +
00011b 3002     +CPI R16 , LOW ( 2 )
00011c e0e0     +LDI R30 , HIGH ( 2 )
00011d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00011e f060      	BRLO _0x2000013
00011f 01f8      	MOVW R30,R16
000120 9731      	SBIW R30,1
000121 018f      	MOVW R16,R30
                +
000122 01d9     +MOVW R26 , R18
000123 9614     +ADIW R26 , 4
000124 93ed     +ST X + , R30
000125 93fc     +ST X , R31
                 	__PUTW1RNS 18,4
                 _0x2000012:
000126 01d9      	MOVW R26,R18
000127 9612      	ADIW R26,2
000128 d2c9      	RCALL SUBOPT_0x3
000129 9731      	SBIW R30,1
00012a 8350      	ST   Z,R21
                 _0x2000013:
00012b 01d9      	MOVW R26,R18
                +
00012c 91ed     +LD R30 , X +
00012d 91fc     +LD R31 , X
00012e 9711     +SBIW R26 , 1
                 	__GETW1P
00012f 23ff      	TST  R31
000130 f00a      	BRMI _0x2000014
000131 d2c0      	RCALL SUBOPT_0x3
                 _0x2000014:
000132 c005      	RJMP _0x2000015
                 _0x2000010:
000133 01d9      	MOVW R26,R18
000134 efef      	LDI  R30,LOW(65535)
000135 efff      	LDI  R31,HIGH(65535)
000136 93ed      	ST   X+,R30
000137 93fc      	ST   X,R31
                 _0x2000015:
000138 d319      	RCALL __LOADLOCR6
000139 9627      	ADIW R28,7
00013a 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
00013b 93ba      	ST   -Y,R27
00013c 93aa      	ST   -Y,R26
00013d 9726      	SBIW R28,6
00013e d30c      	RCALL __SAVELOCR6
00013f e010      	LDI  R17,0
000140 85ac      	LDD  R26,Y+12
000141 85bd      	LDD  R27,Y+12+1
000142 e0e0      	LDI  R30,LOW(0)
000143 e0f0      	LDI  R31,HIGH(0)
000144 93ed      	ST   X+,R30
000145 93fc      	ST   X,R31
                 _0x2000016:
000146 89ea      	LDD  R30,Y+18
000147 89fb      	LDD  R31,Y+18+1
000148 9631      	ADIW R30,1
000149 8bea      	STD  Y+18,R30
00014a 8bfb      	STD  Y+18+1,R31
00014b 9731      	SBIW R30,1
00014c 91e4      	LPM  R30,Z
00014d 2f2e      	MOV  R18,R30
00014e 30e0      	CPI  R30,0
00014f f409      	BRNE PC+2
000150 c108      	RJMP _0x2000018
000151 2fe1      	MOV  R30,R17
000152 30e0      	CPI  R30,0
000153 f431      	BRNE _0x200001C
000154 3225      	CPI  R18,37
000155 f411      	BRNE _0x200001D
000156 e011      	LDI  R17,LOW(1)
000157 c001      	RJMP _0x200001E
                 _0x200001D:
000158 d29f      	RCALL SUBOPT_0x4
                 _0x200001E:
000159 c0fe      	RJMP _0x200001B
                 _0x200001C:
00015a 30e1      	CPI  R30,LOW(0x1)
00015b f4a1      	BRNE _0x200001F
00015c 3225      	CPI  R18,37
00015d f411      	BRNE _0x2000020
00015e d299      	RCALL SUBOPT_0x4
00015f c0f7      	RJMP _0x20000CC
                 _0x2000020:
000160 e012      	LDI  R17,LOW(2)
000161 e040      	LDI  R20,LOW(0)
000162 e000      	LDI  R16,LOW(0)
000163 322d      	CPI  R18,45
000164 f411      	BRNE _0x2000021
000165 e001      	LDI  R16,LOW(1)
000166 c0f1      	RJMP _0x200001B
                 _0x2000021:
000167 322b      	CPI  R18,43
000168 f411      	BRNE _0x2000022
000169 e24b      	LDI  R20,LOW(43)
00016a c0ed      	RJMP _0x200001B
                 _0x2000022:
00016b 3220      	CPI  R18,32
00016c f411      	BRNE _0x2000023
00016d e240      	LDI  R20,LOW(32)
00016e c0e9      	RJMP _0x200001B
                 _0x2000023:
00016f c002      	RJMP _0x2000024
                 _0x200001F:
000170 30e2      	CPI  R30,LOW(0x2)
000171 f439      	BRNE _0x2000025
                 _0x2000024:
000172 e050      	LDI  R21,LOW(0)
000173 e013      	LDI  R17,LOW(3)
000174 3320      	CPI  R18,48
000175 f411      	BRNE _0x2000026
000176 6800      	ORI  R16,LOW(128)
000177 c0e0      	RJMP _0x200001B
                 _0x2000026:
000178 c003      	RJMP _0x2000027
                 _0x2000025:
000179 30e3      	CPI  R30,LOW(0x3)
00017a f009      	BREQ PC+2
00017b c0dc      	RJMP _0x200001B
                 _0x2000027:
00017c 3320      	CPI  R18,48
00017d f010      	BRLO _0x200002A
00017e 332a      	CPI  R18,58
00017f f008      	BRLO _0x200002B
                 _0x200002A:
000180 c007      	RJMP _0x2000029
                 _0x200002B:
000181 e0aa      	LDI  R26,LOW(10)
000182 9f5a      	MUL  R21,R26
000183 2d50      	MOV  R21,R0
000184 2fe2      	MOV  R30,R18
000185 53e0      	SUBI R30,LOW(48)
000186 0f5e      	ADD  R21,R30
000187 c0d0      	RJMP _0x200001B
                 _0x2000029:
000188 2fe2      	MOV  R30,R18
000189 36e3      	CPI  R30,LOW(0x63)
00018a f439      	BRNE _0x200002F
00018b d273      	RCALL SUBOPT_0x5
00018c 89e8      	LDD  R30,Y+16
00018d 89f9      	LDD  R31,Y+16+1
00018e 81a4      	LDD  R26,Z+4
00018f 93aa      	ST   -Y,R26
000190 d274      	RCALL SUBOPT_0x6
000191 c0c5      	RJMP _0x2000030
                 _0x200002F:
000192 37e3      	CPI  R30,LOW(0x73)
000193 f429      	BRNE _0x2000032
000194 d26a      	RCALL SUBOPT_0x5
000195 d275      	RCALL SUBOPT_0x7
000196 d21c      	RCALL _strlen
000197 2f1e      	MOV  R17,R30
000198 c007      	RJMP _0x2000033
                 _0x2000032:
000199 37e0      	CPI  R30,LOW(0x70)
00019a f449      	BRNE _0x2000035
00019b d263      	RCALL SUBOPT_0x5
00019c d26e      	RCALL SUBOPT_0x7
00019d d221      	RCALL _strlenf
00019e 2f1e      	MOV  R17,R30
00019f 6008      	ORI  R16,LOW(8)
                 _0x2000033:
0001a0 6002      	ORI  R16,LOW(2)
0001a1 770f      	ANDI R16,LOW(127)
0001a2 e030      	LDI  R19,LOW(0)
0001a3 c037      	RJMP _0x2000036
                 _0x2000035:
0001a4 36e4      	CPI  R30,LOW(0x64)
0001a5 f011      	BREQ _0x2000039
0001a6 36e9      	CPI  R30,LOW(0x69)
0001a7 f411      	BRNE _0x200003A
                 _0x2000039:
0001a8 6004      	ORI  R16,LOW(4)
0001a9 c002      	RJMP _0x200003B
                 _0x200003A:
0001aa 37e5      	CPI  R30,LOW(0x75)
0001ab f431      	BRNE _0x200003C
                 _0x200003B:
0001ac e5e4      	LDI  R30,LOW(_tbl10_G100*2)
0001ad e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0001ae 83ee      	STD  Y+6,R30
0001af 83ff      	STD  Y+6+1,R31
0001b0 e015      	LDI  R17,LOW(5)
0001b1 c00c      	RJMP _0x200003D
                 _0x200003C:
0001b2 35e8      	CPI  R30,LOW(0x58)
0001b3 f411      	BRNE _0x200003F
0001b4 6008      	ORI  R16,LOW(8)
0001b5 c003      	RJMP _0x2000040
                 _0x200003F:
0001b6 37e8      	CPI  R30,LOW(0x78)
0001b7 f009      	BREQ PC+2
0001b8 c09e      	RJMP _0x2000071
                 _0x2000040:
0001b9 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
0001ba e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0001bb 83ee      	STD  Y+6,R30
0001bc 83ff      	STD  Y+6+1,R31
0001bd e014      	LDI  R17,LOW(4)
                 _0x200003D:
0001be ff02      	SBRS R16,2
0001bf c015      	RJMP _0x2000042
0001c0 d23e      	RCALL SUBOPT_0x5
0001c1 89a8      	LDD  R26,Y+16
0001c2 89b9      	LDD  R27,Y+16+1
0001c3 9614      	ADIW R26,4
0001c4 91ed      	LD   R30,X+
0001c5 91fd      	LD   R31,X+
0001c6 87ea      	STD  Y+10,R30
0001c7 87fb      	STD  Y+10+1,R31
0001c8 85ab      	LDD  R26,Y+11
0001c9 23aa      	TST  R26
0001ca f422      	BRPL _0x2000043
0001cb d28d      	RCALL __ANEGW1
0001cc 87ea      	STD  Y+10,R30
0001cd 87fb      	STD  Y+10+1,R31
0001ce e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0001cf 3040      	CPI  R20,0
0001d0 f011      	BREQ _0x2000044
0001d1 5f1f      	SUBI R17,-LOW(1)
0001d2 c001      	RJMP _0x2000045
                 _0x2000044:
0001d3 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0001d4 c006      	RJMP _0x2000046
                 _0x2000042:
0001d5 d229      	RCALL SUBOPT_0x5
0001d6 89a8      	LDD  R26,Y+16
0001d7 89b9      	LDD  R27,Y+16+1
0001d8 d214      	RCALL SUBOPT_0x2
0001d9 87ea      	STD  Y+10,R30
0001da 87fb      	STD  Y+10+1,R31
                 _0x2000046:
                 _0x2000036:
0001db fd00      	SBRC R16,0
0001dc c010      	RJMP _0x2000047
                 _0x2000048:
0001dd 1715      	CP   R17,R21
0001de f470      	BRSH _0x200004A
0001df ff07      	SBRS R16,7
0001e0 c008      	RJMP _0x200004B
0001e1 ff02      	SBRS R16,2
0001e2 c004      	RJMP _0x200004C
0001e3 7f0b      	ANDI R16,LOW(251)
0001e4 2f24      	MOV  R18,R20
0001e5 5011      	SUBI R17,LOW(1)
0001e6 c001      	RJMP _0x200004D
                 _0x200004C:
0001e7 e320      	LDI  R18,LOW(48)
                 _0x200004D:
0001e8 c001      	RJMP _0x200004E
                 _0x200004B:
0001e9 e220      	LDI  R18,LOW(32)
                 _0x200004E:
0001ea d20d      	RCALL SUBOPT_0x4
0001eb 5051      	SUBI R21,LOW(1)
0001ec cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
0001ed 2f31      	MOV  R19,R17
0001ee ff01      	SBRS R16,1
0001ef c016      	RJMP _0x200004F
                 _0x2000050:
0001f0 3030      	CPI  R19,0
0001f1 f099      	BREQ _0x2000052
0001f2 ff03      	SBRS R16,3
0001f3 c006      	RJMP _0x2000053
0001f4 81ee      	LDD  R30,Y+6
0001f5 81ff      	LDD  R31,Y+6+1
0001f6 9125      	LPM  R18,Z+
0001f7 83ee      	STD  Y+6,R30
0001f8 83ff      	STD  Y+6+1,R31
0001f9 c005      	RJMP _0x2000054
                 _0x2000053:
0001fa 81ae      	LDD  R26,Y+6
0001fb 81bf      	LDD  R27,Y+6+1
0001fc 912d      	LD   R18,X+
0001fd 83ae      	STD  Y+6,R26
0001fe 83bf      	STD  Y+6+1,R27
                 _0x2000054:
0001ff d1f8      	RCALL SUBOPT_0x4
000200 3050      	CPI  R21,0
000201 f009      	BREQ _0x2000055
000202 5051      	SUBI R21,LOW(1)
                 _0x2000055:
000203 5031      	SUBI R19,LOW(1)
000204 cfeb      	RJMP _0x2000050
                 _0x2000052:
000205 c048      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000206 e320      	LDI  R18,LOW(48)
000207 81ee      	LDD  R30,Y+6
000208 81ff      	LDD  R31,Y+6+1
000209 d253      	RCALL __GETW1PF
00020a 87e8      	STD  Y+8,R30
00020b 87f9      	STD  Y+8+1,R31
00020c 81ee      	LDD  R30,Y+6
00020d 81ff      	LDD  R31,Y+6+1
00020e 9632      	ADIW R30,2
00020f 83ee      	STD  Y+6,R30
000210 83ff      	STD  Y+6+1,R31
                 _0x200005A:
000211 85e8      	LDD  R30,Y+8
000212 85f9      	LDD  R31,Y+8+1
000213 85aa      	LDD  R26,Y+10
000214 85bb      	LDD  R27,Y+10+1
000215 17ae      	CP   R26,R30
000216 07bf      	CPC  R27,R31
000217 f050      	BRLO _0x200005C
000218 5f2f      	SUBI R18,-LOW(1)
000219 85a8      	LDD  R26,Y+8
00021a 85b9      	LDD  R27,Y+8+1
00021b 85ea      	LDD  R30,Y+10
00021c 85fb      	LDD  R31,Y+10+1
00021d 1bea      	SUB  R30,R26
00021e 0bfb      	SBC  R31,R27
00021f 87ea      	STD  Y+10,R30
000220 87fb      	STD  Y+10+1,R31
000221 cfef      	RJMP _0x200005A
                 _0x200005C:
000222 332a      	CPI  R18,58
000223 f028      	BRLO _0x200005D
000224 ff03      	SBRS R16,3
000225 c002      	RJMP _0x200005E
000226 5f29      	SUBI R18,-LOW(7)
000227 c001      	RJMP _0x200005F
                 _0x200005E:
000228 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000229 fd04      	SBRC R16,4
00022a c019      	RJMP _0x2000061
00022b 3321      	CPI  R18,49
00022c f420      	BRSH _0x2000063
00022d 85a8      	LDD  R26,Y+8
00022e 85b9      	LDD  R27,Y+8+1
00022f 9711      	SBIW R26,1
000230 f409      	BRNE _0x2000062
                 _0x2000063:
000231 c009      	RJMP _0x20000CD
                 _0x2000062:
000232 1753      	CP   R21,R19
000233 f010      	BRLO _0x2000067
000234 ff00      	SBRS R16,0
000235 c001      	RJMP _0x2000068
                 _0x2000067:
000236 c011      	RJMP _0x2000066
                 _0x2000068:
000237 e220      	LDI  R18,LOW(32)
000238 ff07      	SBRS R16,7
000239 c00a      	RJMP _0x2000069
00023a e320      	LDI  R18,LOW(48)
                 _0x20000CD:
00023b 6100      	ORI  R16,LOW(16)
00023c ff02      	SBRS R16,2
00023d c006      	RJMP _0x200006A
00023e 7f0b      	ANDI R16,LOW(251)
00023f 934a      	ST   -Y,R20
000240 d1c4      	RCALL SUBOPT_0x6
000241 3050      	CPI  R21,0
000242 f009      	BREQ _0x200006B
000243 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
000244 d1b3      	RCALL SUBOPT_0x4
000245 3050      	CPI  R21,0
000246 f009      	BREQ _0x200006C
000247 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000248 5031      	SUBI R19,LOW(1)
000249 85a8      	LDD  R26,Y+8
00024a 85b9      	LDD  R27,Y+8+1
00024b 9712      	SBIW R26,2
00024c f008      	BRLO _0x2000059
00024d cfb8      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
00024e ff00      	SBRS R16,0
00024f c007      	RJMP _0x200006D
                 _0x200006E:
000250 3050      	CPI  R21,0
000251 f029      	BREQ _0x2000070
000252 5051      	SUBI R21,LOW(1)
000253 e2e0      	LDI  R30,LOW(32)
000254 93ea      	ST   -Y,R30
000255 d1af      	RCALL SUBOPT_0x6
000256 cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000257 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000258 ceed      	RJMP _0x2000016
                 _0x2000018:
000259 85ac      	LDD  R26,Y+12
00025a 85bd      	LDD  R27,Y+12+1
00025b 91ed      	LD   R30,X+
00025c 91fd      	LD   R31,X+
00025d d1f4      	RCALL __LOADLOCR6
00025e 9664      	ADIW R28,20
00025f 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
000260 92ff      	PUSH R15
000261 2ef8      	MOV  R15,R24
000262 9726      	SBIW R28,6
000263 d1e7      	RCALL __SAVELOCR6
000264 01fe      	MOVW R30,R28
                +
000265 2400     +CLR R0
000266 0def     +ADD R30 , R15
000267 1df0     +ADC R31 , R0
                 	__ADDW1R15
                +
000268 8546     +LDD R20 , Z + 14
000269 8557     +LDD R21 , Z + 14 + 1
                 	__GETWRZ 20,21,14
00026a 2e04      	MOV  R0,R20
00026b 2a05      	OR   R0,R21
00026c f419      	BRNE _0x2000072
00026d efef      	LDI  R30,LOW(65535)
00026e efff      	LDI  R31,HIGH(65535)
00026f c023      	RJMP _0x20C0006
                 _0x2000072:
000270 01de      	MOVW R26,R28
000271 9618      	ADIW R26,8
                +
000272 2400     +CLR R0
000273 0daf     +ADD R26 , R15
000274 1db0     +ADC R27 , R0
                 	__ADDW2R15
000275 018d      	MOVW R16,R26
                +
000276 8748     +STD Y + 8 , R20
000277 8759     +STD Y + 8 + 1 , R21
                 	__PUTWSR 20,21,8
000278 e0e0      	LDI  R30,LOW(0)
000279 87ea      	STD  Y+10,R30
00027a 87eb      	STD  Y+10+1,R30
00027b 01de      	MOVW R26,R28
00027c 961c      	ADIW R26,12
                +
00027d 2400     +CLR R0
00027e 0daf     +ADD R26 , R15
00027f 1db0     +ADC R27 , R0
                 	__ADDW2R15
000280 91ed      	LD   R30,X+
000281 91fd      	LD   R31,X+
000282 93fa      	ST   -Y,R31
000283 93ea      	ST   -Y,R30
000284 931a      	ST   -Y,R17
000285 930a      	ST   -Y,R16
000286 e0ed      	LDI  R30,LOW(_put_buff_G100)
000287 e0f1      	LDI  R31,HIGH(_put_buff_G100)
000288 93fa      	ST   -Y,R31
000289 93ea      	ST   -Y,R30
00028a 01de      	MOVW R26,R28
00028b 961c      	ADIW R26,12
00028c deae      	RCALL __print_G100
00028d 019f      	MOVW R18,R30
00028e 85a8      	LDD  R26,Y+8
00028f 85b9      	LDD  R27,Y+8+1
000290 e0e0      	LDI  R30,LOW(0)
000291 93ec      	ST   X,R30
000292 01f9      	MOVW R30,R18
                 _0x20C0006:
000293 d1be      	RCALL __LOADLOCR6
000294 962c      	ADIW R28,12
000295 90ff      	POP  R15
000296 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
000297 931a      	ST   -Y,R17
000298 2f1a      	MOV  R17,R26
000299 b3e2      	IN   R30,0x12
00029a 70ef      	ANDI R30,LOW(0xF)
00029b 2fae      	MOV  R26,R30
00029c 2fe1      	MOV  R30,R17
00029d 7fe0      	ANDI R30,LOW(0xF0)
00029e 2bea      	OR   R30,R26
00029f bbe2      	OUT  0x12,R30
                +
0002a0 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0002a1 958a     +DEC R24
0002a2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0002a3 9ac2      	SBI  0x18,2
                +
0002a4 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0002a5 958a     +DEC R24
0002a6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0002a7 98c2      	CBI  0x18,2
                +
0002a8 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
0002a9 958a     +DEC R24
0002aa f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
0002ab 940c 0362 	JMP  _0x20C0005
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0002ad 93aa      	ST   -Y,R26
0002ae 81a8      	LD   R26,Y
0002af dfe7      	RCALL __lcd_write_nibble_G101
0002b0 81e8          ld    r30,y
0002b1 95e2          swap  r30
0002b2 83e8          st    y,r30
0002b3 81a8      	LD   R26,Y
0002b4 dfe2      	RCALL __lcd_write_nibble_G101
                +
0002b5 ec88     +LDI R24 , LOW ( 200 )
0002b6 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002b7 9701     +SBIW R24 , 1
0002b8 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002b9 9621      	ADIW R28,1
0002ba 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0002bb d159      	RCALL SUBOPT_0x8
0002bc 2fe1      	MOV  R30,R17
0002bd e0f0      	LDI  R31,0
0002be 59e0      	SUBI R30,LOW(-__base_y_G101)
0002bf 4ffe      	SBCI R31,HIGH(-__base_y_G101)
0002c0 81e0      	LD   R30,Z
0002c1 0fe0      	ADD  R30,R16
0002c2 2fae      	MOV  R26,R30
0002c3 dfe9      	RCALL __lcd_write_data
0002c4 2e50      	MOV  R5,R16
0002c5 2e41      	MOV  R4,R17
0002c6 940c 036c 	JMP  _0x20C0004
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0002c8 e0a2      	LDI  R26,LOW(2)
0002c9 d150      	RCALL SUBOPT_0x9
0002ca e0ac      	LDI  R26,LOW(12)
0002cb dfe1      	RCALL __lcd_write_data
0002cc e0a1      	LDI  R26,LOW(1)
0002cd d14c      	RCALL SUBOPT_0x9
0002ce e0e0      	LDI  R30,LOW(0)
0002cf 2e4e      	MOV  R4,R30
0002d0 2e5e      	MOV  R5,R30
0002d1 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0002d2 931a      	ST   -Y,R17
0002d3 2f1a      	MOV  R17,R26
0002d4 301a      	CPI  R17,10
0002d5 f011      	BREQ _0x2020005
0002d6 1457      	CP   R5,R7
0002d7 f048      	BRLO _0x2020004
                 _0x2020005:
0002d8 e0e0      	LDI  R30,LOW(0)
0002d9 93ea      	ST   -Y,R30
0002da 9443      	INC  R4
0002db 2da4      	MOV  R26,R4
0002dc dfde      	RCALL _lcd_gotoxy
0002dd 301a      	CPI  R17,10
0002de f411      	BRNE _0x2020007
0002df 940c 0362 	JMP  _0x20C0005
                 _0x2020007:
                 _0x2020004:
0002e1 9453      	INC  R5
0002e2 9ac0      	SBI  0x18,0
0002e3 2fa1      	MOV  R26,R17
0002e4 dfc8      	RCALL __lcd_write_data
0002e5 98c0      	CBI  0x18,0
0002e6 940c 0362 	JMP  _0x20C0005
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0002e8 d164      	RCALL __SAVELOCR4
0002e9 019d      	MOVW R18,R26
                 _0x2020008:
0002ea 01d9      	MOVW R26,R18
                +
0002eb 5f2f     +SUBI R18 , LOW ( - 1 )
0002ec 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0002ed 91ec      	LD   R30,X
0002ee 2f1e      	MOV  R17,R30
0002ef 30e0      	CPI  R30,0
0002f0 f019      	BREQ _0x202000A
0002f1 2fa1      	MOV  R26,R17
0002f2 dfdf      	RCALL _lcd_putchar
0002f3 cff6      	RJMP _0x2020008
                 _0x202000A:
0002f4 d15f      	RCALL __LOADLOCR4
0002f5 9624      	ADIW R28,4
0002f6 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0002f7 931a      	ST   -Y,R17
0002f8 2f1a      	MOV  R17,R26
0002f9 b3e1      	IN   R30,0x11
0002fa 6fe0      	ORI  R30,LOW(0xF0)
0002fb bbe1      	OUT  0x11,R30
0002fc 9aba      	SBI  0x17,2
0002fd 9ab8      	SBI  0x17,0
0002fe 9ab9      	SBI  0x17,1
0002ff 98c2      	CBI  0x18,2
000300 98c0      	CBI  0x18,0
000301 98c1      	CBI  0x18,1
000302 2e71      	MOV  R7,R17
000303 2fe1      	MOV  R30,R17
000304 58e0      	SUBI R30,-LOW(128)
                +
000305 93e0 0172+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000307 2fe1      	MOV  R30,R17
000308 54e0      	SUBI R30,-LOW(192)
                +
000309 93e0 0173+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
00030b e1a4      	LDI  R26,LOW(20)
00030c e0b0      	LDI  R27,0
00030d d158      	RCALL _delay_ms
00030e d10f      	RCALL SUBOPT_0xA
00030f d10e      	RCALL SUBOPT_0xA
000310 d10d      	RCALL SUBOPT_0xA
000311 e2a0      	LDI  R26,LOW(32)
000312 df84      	RCALL __lcd_write_nibble_G101
                +
000313 e980     +LDI R24 , LOW ( 400 )
000314 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
000315 9701     +SBIW R24 , 1
000316 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
000317 e2a8      	LDI  R26,LOW(40)
000318 df94      	RCALL __lcd_write_data
000319 e0a4      	LDI  R26,LOW(4)
00031a df92      	RCALL __lcd_write_data
00031b e8a5      	LDI  R26,LOW(133)
00031c df90      	RCALL __lcd_write_data
00031d e0a6      	LDI  R26,LOW(6)
00031e df8e      	RCALL __lcd_write_data
00031f dfa8      	RCALL _lcd_clear
000320 940c 0362 	JMP  _0x20C0005
                 ; .FEND
                 
                 	.CSEG
                 _ds1302_rst0_G102:
                 ; .FSTART _ds1302_rst0_G102
000322 98dd      	cbi  __ds1302_port,__ds1302_rst
                +
000323 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000324 958a     +DEC R24
000325 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000326 9508      	RET
                 ; .FEND
                 _ds1302_write0_G102:
                 ; .FSTART _ds1302_write0_G102
000327 931a      	ST   -Y,R17
000328 2f1a      	MOV  R17,R26
000329 9ad7          sbi  __ds1302_port-1,__ds1302_sclk
00032a 9ad6          sbi  __ds1302_port-1,__ds1302_io
00032b 9ad5          sbi  __ds1302_port-1,__ds1302_rst
00032c 9add          sbi  __ds1302_port,__ds1302_rst
                +
00032d e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00032e 958a     +DEC R24
00032f f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
000330 2fa1      	MOV  R26,R17
000331 d002      	RCALL _ds1302_write1_G102
000332 940c 0362 	JMP  _0x20C0005
                 ; .FEND
                 _ds1302_write1_G102:
                 ; .FSTART _ds1302_write1_G102
000334 93aa      	ST   -Y,R26
000335 91e9          ld   r30,y+
000336 e0a8          ldi  r26,8
                 ds1302_write2:
000337 95e7          ror  r30
000338 98de          cbi  __ds1302_port,__ds1302_io
000339 f408          brcc ds1302_write3
00033a 9ade          sbi  __ds1302_port,__ds1302_io
                 ds1302_write3:
00033b 0000          nop
00033c 0000          nop
00033d 0000          nop
00033e 0000          nop
00033f 9adf          sbi  __ds1302_port,__ds1302_sclk
                +
000340 e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
000341 958a     +DEC R24
000342 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
000343 98df      	cbi  __ds1302_port,__ds1302_sclk
                +
000344 e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
000345 958a     +DEC R24
000346 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
000347 95aa          dec  r26
000348 f771          brne ds1302_write2
000349 9508          ret
                 ; .FEND
                 _ds1302_read:
                 ; .FSTART _ds1302_read
00034a 931a      	ST   -Y,R17
00034b 2f1a      	MOV  R17,R26
00034c 2fe1      	MOV  R30,R17
00034d 60e1      	ORI  R30,1
00034e 2fae      	MOV  R26,R30
00034f dfd7      	RCALL _ds1302_write0_G102
000350 98de          cbi  __ds1302_port,__ds1302_io
000351 98d6          cbi  __ds1302_port-1,__ds1302_io
000352 e0a8          ldi  r26,8
                 ds1302_read0:
000353 9488          clc
000354 99ce      	sbic __ds1302_port-2,__ds1302_io
000355 9408          sec
000356 95e7          ror  r30
000357 9adf          sbi  __ds1302_port,__ds1302_sclk
                +
000358 e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
000359 958a     +DEC R24
00035a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
00035b 98df      	cbi  __ds1302_port,__ds1302_sclk
                +
00035c e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
00035d 958a     +DEC R24
00035e f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
00035f 95aa          dec  r26
000360 f791          brne ds1302_read0
000361 dfc0      	RCALL _ds1302_rst0_G102
                 _0x20C0005:
000362 9119      	LD   R17,Y+
000363 9508      	RET
                 ; .FEND
                 _ds1302_write:
                 ; .FSTART _ds1302_write
000364 d0b0      	RCALL SUBOPT_0x8
000365 2fe0      	MOV  R30,R16
000366 7fee      	ANDI R30,0xFE
000367 2fae      	MOV  R26,R30
000368 dfbe      	RCALL _ds1302_write0_G102
000369 2fa1      	MOV  R26,R17
00036a dfc9      	RCALL _ds1302_write1_G102
00036b dfb6      	RCALL _ds1302_rst0_G102
                 _0x20C0004:
00036c 8119      	LDD  R17,Y+1
00036d 8108      	LDD  R16,Y+0
00036e 9623      	ADIW R28,3
00036f 9508      	RET
                 ; .FEND
                 _rtc_init:
                 ; .FSTART _rtc_init
000370 d0b4      	RCALL SUBOPT_0xB
000371 7013      	ANDI R17,LOW(3)
000372 3030      	CPI  R19,0
000373 f009      	BREQ _0x2040003
000374 6a10      	ORI  R17,LOW(160)
                 _0x2040003:
000375 3001      	CPI  R16,1
000376 f411      	BRNE _0x2040004
000377 6014      	ORI  R17,LOW(4)
000378 c005      	RJMP _0x2040005
                 _0x2040004:
000379 3002      	CPI  R16,2
00037a f411      	BRNE _0x2040006
00037b 6018      	ORI  R17,LOW(8)
00037c c001      	RJMP _0x2040007
                 _0x2040006:
00037d e010      	LDI  R17,LOW(0)
                 _0x2040007:
                 _0x2040005:
00037e d0ab      	RCALL SUBOPT_0xC
00037f e9e0      	LDI  R30,LOW(144)
000380 93ea      	ST   -Y,R30
000381 2fa1      	MOV  R26,R17
000382 c028      	RJMP _0x20C0002
                 ; .FEND
                 _rtc_get_time:
                 ; .FSTART _rtc_get_time
000383 d0aa      	RCALL SUBOPT_0xD
000384 e8a5      	LDI  R26,LOW(133)
000385 d0af      	RCALL SUBOPT_0xE
000386 e8a3      	LDI  R26,LOW(131)
000387 d0b3      	RCALL SUBOPT_0xF
000388 e8a1      	LDI  R26,LOW(129)
000389 c00e      	RJMP _0x20C0003
                 ; .FEND
                 _rtc_set_time:
                 ; .FSTART _rtc_set_time
00038a d09a      	RCALL SUBOPT_0xB
00038b d09e      	RCALL SUBOPT_0xC
00038c e8e4      	LDI  R30,LOW(132)
00038d d0b3      	RCALL SUBOPT_0x10
00038e e8e2      	LDI  R30,LOW(130)
00038f d0b6      	RCALL SUBOPT_0x11
000390 e8e0      	LDI  R30,LOW(128)
000391 c015      	RJMP _0x20C0001
                 ; .FEND
                 _rtc_get_date:
                 ; .FSTART _rtc_get_date
000392 d09b      	RCALL SUBOPT_0xD
000393 e8a7      	LDI  R26,LOW(135)
000394 d0a0      	RCALL SUBOPT_0xE
000395 e8a9      	LDI  R26,LOW(137)
000396 d0a4      	RCALL SUBOPT_0xF
000397 e8ad      	LDI  R26,LOW(141)
                 _0x20C0003:
000398 dfb1      	RCALL _ds1302_read
000399 2fae      	MOV  R26,R30
00039a d031      	RCALL _bcd2bin
00039b 01d8      	MOVW R26,R16
00039c 93ec      	ST   X,R30
00039d d0b4      	RCALL __LOADLOCR6
00039e 962a      	ADIW R28,10
00039f 9508      	RET
                 ; .FEND
                 _rtc_set_date:
                 ; .FSTART _rtc_set_date
0003a0 d084      	RCALL SUBOPT_0xB
0003a1 d088      	RCALL SUBOPT_0xC
0003a2 e8e6      	LDI  R30,LOW(134)
0003a3 d09d      	RCALL SUBOPT_0x10
0003a4 e8e8      	LDI  R30,LOW(136)
0003a5 d0a0      	RCALL SUBOPT_0x11
0003a6 e8ec      	LDI  R30,LOW(140)
                 _0x20C0001:
0003a7 93ea      	ST   -Y,R30
0003a8 2fa1      	MOV  R26,R17
0003a9 d02f      	RCALL _bin2bcd
0003aa 2fae      	MOV  R26,R30
                 _0x20C0002:
0003ab dfb8      	RCALL _ds1302_write
0003ac e8ee      	LDI  R30,LOW(142)
0003ad 93ea      	ST   -Y,R30
0003ae e8a0      	LDI  R26,LOW(128)
0003af dfb4      	RCALL _ds1302_write
0003b0 d0a3      	RCALL __LOADLOCR4
0003b1 9626      	ADIW R28,6
0003b2 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0003b3 93ba      	ST   -Y,R27
0003b4 93aa      	ST   -Y,R26
0003b5 91a9          ld   r26,y+
0003b6 91b9          ld   r27,y+
0003b7 27ee          clr  r30
0003b8 27ff          clr  r31
                 strlen0:
0003b9 916d          ld   r22,x+
0003ba 2366          tst  r22
0003bb f011          breq strlen1
0003bc 9631          adiw r30,1
0003bd cffb          rjmp strlen0
                 strlen1:
0003be 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0003bf 93ba      	ST   -Y,R27
0003c0 93aa      	ST   -Y,R26
0003c1 27aa          clr  r26
0003c2 27bb          clr  r27
0003c3 91e9          ld   r30,y+
0003c4 91f9          ld   r31,y+
                 strlenf0:
0003c5 9005      	lpm  r0,z+
0003c6 2000          tst  r0
0003c7 f011          breq strlenf1
0003c8 9611          adiw r26,1
0003c9 cffb          rjmp strlenf0
                 strlenf1:
0003ca 01fd          movw r30,r26
0003cb 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _bcd2bin:
                 ; .FSTART _bcd2bin
0003cc 93aa      	ST   -Y,R26
0003cd 81e8          ld   r30,y
0003ce 95e2          swap r30
0003cf 70ef          andi r30,0xf
0003d0 2fae          mov  r26,r30
0003d1 0faa          lsl  r26
0003d2 0faa          lsl  r26
0003d3 0fea          add  r30,r26
0003d4 0fee          lsl  r30
0003d5 91a9          ld   r26,y+
0003d6 70af          andi r26,0xf
0003d7 0fea          add  r30,r26
0003d8 9508          ret
                 ; .FEND
                 _bin2bcd:
                 ; .FSTART _bin2bcd
0003d9 93aa      	ST   -Y,R26
0003da 91a9          ld   r26,y+
0003db 27ee          clr  r30
                 bin2bcd0:
0003dc 50aa          subi r26,10
0003dd f012          brmi bin2bcd1
0003de 5fe0          subi r30,-16
0003df cffc          rjmp bin2bcd0
                 bin2bcd1:
0003e0 5fa6          subi r26,-10
0003e1 0fea          add  r30,r26
0003e2 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _display_buffer:
000160           	.BYTE 0x10
                 __base_y_G101:
000170           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
0003e3 e6e0      	LDI  R30,LOW(_display_buffer)
0003e4 e0f1      	LDI  R31,HIGH(_display_buffer)
0003e5 93fa      	ST   -Y,R31
0003e6 93ea      	ST   -Y,R30
0003e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x1:
0003e8 27ff      	CLR  R31
0003e9 2766      	CLR  R22
0003ea 2777      	CLR  R23
0003eb d075      	RCALL __PUTPARD1
0003ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
0003ed 9614      	ADIW R26,4
                +
0003ee 91ed     +LD R30 , X +
0003ef 91fc     +LD R31 , X
0003f0 9711     +SBIW R26 , 1
                 	__GETW1P
0003f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
0003f2 91ed      	LD   R30,X+
0003f3 91fd      	LD   R31,X+
0003f4 9631      	ADIW R30,1
0003f5 93fe      	ST   -X,R31
0003f6 93ee      	ST   -X,R30
0003f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x4:
0003f8 932a      	ST   -Y,R18
0003f9 85ad      	LDD  R26,Y+13
0003fa 85be      	LDD  R27,Y+13+1
0003fb 85ef      	LDD  R30,Y+15
0003fc 89f8      	LDD  R31,Y+15+1
0003fd 9509      	ICALL
0003fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x5:
0003ff 89e8      	LDD  R30,Y+16
000400 89f9      	LDD  R31,Y+16+1
000401 9734      	SBIW R30,4
000402 8be8      	STD  Y+16,R30
000403 8bf9      	STD  Y+16+1,R31
000404 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
000405 85ad      	LDD  R26,Y+13
000406 85be      	LDD  R27,Y+13+1
000407 85ef      	LDD  R30,Y+15
000408 89f8      	LDD  R31,Y+15+1
000409 9509      	ICALL
00040a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
00040b 89a8      	LDD  R26,Y+16
00040c 89b9      	LDD  R27,Y+16+1
00040d 9614      	ADIW R26,4
00040e 91ed      	LD   R30,X+
00040f 91fd      	LD   R31,X+
000410 83ee      	STD  Y+6,R30
000411 83ff      	STD  Y+6+1,R31
000412 81ae      	LDD  R26,Y+6
000413 81bf      	LDD  R27,Y+6+1
000414 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000415 931a      	ST   -Y,R17
000416 930a      	ST   -Y,R16
000417 2f1a      	MOV  R17,R26
000418 810a      	LDD  R16,Y+2
000419 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00041a de92      	RCALL __lcd_write_data
00041b e0a3      	LDI  R26,LOW(3)
00041c e0b0      	LDI  R27,0
00041d c048      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xA:
00041e e3a0      	LDI  R26,LOW(48)
00041f de77      	RCALL __lcd_write_nibble_G101
                +
000420 e980     +LDI R24 , LOW ( 400 )
000421 e091     +LDI R25 , HIGH ( 400 )
                +__DELAY_USW_LOOP :
000422 9701     +SBIW R24 , 1
000423 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 400
000424 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xB:
000425 d027      	RCALL __SAVELOCR4
000426 2f1a      	MOV  R17,R26
000427 810c      	LDD  R16,Y+4
000428 813d      	LDD  R19,Y+5
000429 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xC:
00042a e8ee      	LDI  R30,LOW(142)
00042b 93ea      	ST   -Y,R30
00042c e0a0      	LDI  R26,LOW(0)
00042d cf36      	RJMP _ds1302_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD:
00042e d01c      	RCALL __SAVELOCR6
00042f 018d      	MOVW R16,R26
                +
000430 812e     +LDD R18 , Y + 6
000431 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                +
000432 8548     +LDD R20 , Y + 8
000433 8559     +LDD R21 , Y + 8 + 1
                 	__GETWRS 20,21,8
000434 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
000435 df14      	RCALL _ds1302_read
000436 2fae      	MOV  R26,R30
000437 df94      	RCALL _bcd2bin
000438 01da      	MOVW R26,R20
000439 93ec      	ST   X,R30
00043a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xF:
00043b df0e      	RCALL _ds1302_read
00043c 2fae      	MOV  R26,R30
00043d df8e      	RCALL _bcd2bin
00043e 01d9      	MOVW R26,R18
00043f 93ec      	ST   X,R30
000440 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x10:
000441 93ea      	ST   -Y,R30
000442 2fa3      	MOV  R26,R19
000443 df95      	RCALL _bin2bcd
000444 2fae      	MOV  R26,R30
000445 cf1e      	RJMP _ds1302_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11:
000446 93ea      	ST   -Y,R30
000447 2fa0      	MOV  R26,R16
000448 df90      	RCALL _bin2bcd
000449 2fae      	MOV  R26,R30
00044a cf19      	RJMP _ds1302_write
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
00044b 935a      	ST   -Y,R21
                 __SAVELOCR5:
00044c 934a      	ST   -Y,R20
                 __SAVELOCR4:
00044d 933a      	ST   -Y,R19
                 __SAVELOCR3:
00044e 932a      	ST   -Y,R18
                 __SAVELOCR2:
00044f 931a      	ST   -Y,R17
000450 930a      	ST   -Y,R16
000451 9508      	RET
                 
                 __LOADLOCR6:
000452 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000453 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000454 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000455 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000456 8119      	LDD  R17,Y+1
000457 8108      	LD   R16,Y
000458 9508      	RET
                 
                 __ANEGW1:
000459 95f1      	NEG  R31
00045a 95e1      	NEG  R30
00045b 40f0      	SBCI R31,0
00045c 9508      	RET
                 
                 __GETW1PF:
00045d 9005      	LPM  R0,Z+
00045e 91f4      	LPM  R31,Z
00045f 2de0      	MOV  R30,R0
000460 9508      	RET
                 
                 __PUTPARD1:
000461 937a      	ST   -Y,R23
000462 936a      	ST   -Y,R22
000463 93fa      	ST   -Y,R31
000464 93ea      	ST   -Y,R30
000465 9508      	RET
                 
                 _delay_ms:
000466 9610      	adiw r26,0
000467 f039      	breq __delay_ms1
                 __delay_ms0:
000468 95a8      	wdr
                +
000469 ea80     +LDI R24 , LOW ( 0xFA0 )
00046a e09f     +LDI R25 , HIGH ( 0xFA0 )
                +__DELAY_USW_LOOP :
00046b 9701     +SBIW R24 , 1
00046c f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA0
00046d 9711      	sbiw r26,1
00046e f7c9      	brne __delay_ms0
                 __delay_ms1:
00046f 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  17 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   6 
r16:  47 r17:  57 r18:  43 r19:  16 r20:  17 r21:  26 r22:  12 r23:   3 
r24:  36 r25:   6 r26: 143 r27:  33 r28:  17 r29:   1 r30: 264 r31:  75 
x  :  34 y  : 172 z  :  17 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   3 add   :   9 
adiw  :  25 and   :   0 andi  :  10 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  18 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   8 
brlt  :   0 brmi  :   2 brne  :  40 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :  11 cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 
clr   :  13 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   2 cpi   :  36 cpse  :   0 dec   :  12 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :  15 inc   :   2 jmp   :  28 ld    :  33 ldd   :  67 ldi   : 133 
lds   :   0 lpm   :  14 lsl   :   3 lsr   :   0 mov   :  59 movw  :  26 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   4 or    :   2 
ori   :  12 out   :  44 pop   :   7 push  :   7 rcall : 113 ret   :  36 
reti  :   2 rjmp  :  65 rol   :   0 ror   :   2 sbc   :   2 sbci  :   4 
sbi   :  12 sbic  :   1 sbis  :   0 sbiw  :  21 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   1 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  81 std   :  30 sts   :   2 sub   :   1 subi  :  21 swap  :   2 
tst   :   4 wdr   :   1 
Instructions used: 60 out of 116 (51.7%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0008e0   2204     68   2272   16384  13.9%
[.dseg] 0x000060 0x000174      0     20     20    1024   2.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
